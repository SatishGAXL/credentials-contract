{
  "hints": {
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "uploadCertificate(string,string,string,string,string,string,string,string,string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "getCertificate(uint64)(address,address,string,string,string,string,string,string,string,string,string)": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "changeOwner(uint64,address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "changeMetadata(uint64,string,string,string,string,string,string,string,string,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "index": {
          "type": "uint64",
          "key": "index"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "CredentialsWithoutAsa",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "uploadCertificate",
        "args": [
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "ipfs_hash",
            "type": "string"
          },
          {
            "name": "studentEmail",
            "type": "string"
          },
          {
            "name": "studentName",
            "type": "string"
          },
          {
            "name": "instituteName",
            "type": "string"
          },
          {
            "name": "eventName",
            "type": "string"
          },
          {
            "name": "courseTitle",
            "type": "string"
          },
          {
            "name": "courseStartDate",
            "type": "string"
          },
          {
            "name": "courseEndDate",
            "type": "string"
          }
        ],
        "returns": {
          "type": "uint64"
        },
        "events": [
          {
            "name": "NewCertificate",
            "args": [
              {
                "name": "index",
                "type": "uint64"
              },
              {
                "name": "certificate",
                "type": "(address,address,string,string,string,string,string,string,string,string,string)"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "getCertificate",
        "args": [
          {
            "name": "index",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "(address,address,string,string,string,string,string,string,string,string,string)"
        }
      },
      {
        "name": "changeOwner",
        "args": [
          {
            "name": "index",
            "type": "uint64"
          },
          {
            "name": "newOwner",
            "type": "address"
          }
        ],
        "returns": {
          "type": "void"
        },
        "events": [
          {
            "name": "ChangedCertificate",
            "args": [
              {
                "name": "index",
                "type": "uint64"
              },
              {
                "name": "certificate",
                "type": "(address,address,string,string,string,string,string,string,string,string,string)"
              }
            ],
            "desc": ""
          }
        ]
      },
      {
        "name": "changeMetadata",
        "args": [
          {
            "name": "index",
            "type": "uint64"
          },
          {
            "name": "url",
            "type": "string"
          },
          {
            "name": "ipfs_hash",
            "type": "string"
          },
          {
            "name": "studentEmail",
            "type": "string"
          },
          {
            "name": "studentName",
            "type": "string"
          },
          {
            "name": "instituteName",
            "type": "string"
          },
          {
            "name": "eventName",
            "type": "string"
          },
          {
            "name": "courseTitle",
            "type": "string"
          },
          {
            "name": "courseStartDate",
            "type": "string"
          },
          {
            "name": "courseEndDate",
            "type": "string"
          }
        ],
        "returns": {
          "type": "void"
        }
      }
    ],
    "events": [
      {
        "name": "NewCertificate",
        "args": [
          {
            "name": "index",
            "type": "uint64"
          },
          {
            "name": "certificate",
            "type": "(address,address,string,string,string,string,string,string,string,string,string)"
          }
        ],
        "desc": ""
      },
      {
        "name": "ChangedCertificate",
        "args": [
          {
            "name": "index",
            "type": "uint64"
          },
          {
            "name": "certificate",
            "type": "(address,address,string,string,string,string,string,string,string,string,string)"
          }
        ],
        "desc": ""
      }
    ]
  }
}